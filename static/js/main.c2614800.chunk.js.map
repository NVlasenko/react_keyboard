{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","keyPressed","setKeyPressed","lastKeyPressed","setLastKeyPressed","useEffect","handleKey","event","key","document","addEventListener","removeEventListener","className","ReactDOM","render","getElementById"],"mappings":"sLAGaA,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4CF,mBAAS,IAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAeA,OAbAC,qBAAU,WACR,IAAMC,EAAY,SAACC,GACjBL,GAAc,GACdE,EAAkBG,EAAMC,MAK1B,OAFAC,SAASC,iBAAiB,QAASJ,GAE5B,WACLG,SAASE,oBAAoB,QAASL,MAEvC,IAGD,qBAAKM,UAAU,MAAf,SACGX,EACC,oBAAGW,UAAU,eAAb,sCAEIT,EAFJ,OAKA,mBAAGS,UAAU,eAAb,wC,MCvBRC,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.c2614800.chunk.js","sourcesContent":["/* eslint-disable */\nimport React, { useEffect, useState } from 'react';\n\nexport const App: React.FC = () => {\n  const [keyPressed, setKeyPressed] = useState(false);\n  const [lastKeyPressed, setLastKeyPressed] = useState('');\n\n  useEffect(() => {\n    const handleKey = (event: KeyboardEvent) => {\n      setKeyPressed(true);\n      setLastKeyPressed(event.key);\n    };\n\n    document.addEventListener('keyup', handleKey);\n\n    return () => {\n      document.removeEventListener('keyup', handleKey);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {keyPressed ? (\n        <p className=\"App__message\">\n          The last pressed key is\n          [{lastKeyPressed}]\n        </p>\n      ) : (\n        <p className=\"App__message\">Nothing was pressed yet</p>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}